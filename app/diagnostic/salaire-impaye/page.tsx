'use client';

import { useState } from 'react';
import Link from 'next/link';

// ============================================================================
// TYPES & INTERFACES
// ============================================================================

interface FormData {
  // √âTAPE 1 : Informations g√©n√©rales
  typeContrat: string;
  anciennete: string;
  salaireBrutMensuel: string;
  dernierJourTravaille: string;
  
  // √âTAPE 2 : D√©tails du non-paiement
  periodeImpayee: string;
  elementsImpayes: string[];
  montantTotalDu: string;
  datePaiementPrevu: string;
  nombreMoisImpayes: string;
  
  // √âTAPE 3 : Contexte et circonstances
  raisonInvoquee: string;
  situationEntreprise: string;
  autresSalariesConcernes: string;
  demarchesEffectuees: string[];
  
  // √âTAPE 4 : Preuves disponibles
  preuvesDisponibles: string[];
  qualitePreuves: string;
  
  // √âTAPE 5 : R√©clamations et suite
  reclamationsEcrites: string;
  reponseEmployeur: string;
  ruptureContrat: string;
  procedurePrudhomale: string;
}

// ============================================================================
// COMPOSANT PRINCIPAL
// ============================================================================

export default function DiagnosticSalaireImpaye() {
  const [currentStep, setCurrentStep] = useState(1);
  const [showResults, setShowResults] = useState(false);
  const [formData, setFormData] = useState<FormData>({
    // √âtape 1
    typeContrat: '',
    anciennete: '',
    salaireBrutMensuel: '',
    dernierJourTravaille: '',
    
    // √âtape 2
    periodeImpayee: '',
    elementsImpayes: [],
    montantTotalDu: '',
    datePaiementPrevu: '',
    nombreMoisImpayes: '',
    
    // √âtape 3
    raisonInvoquee: '',
    situationEntreprise: '',
    autresSalariesConcernes: '',
    demarchesEffectuees: [],
    
    // √âtape 4
    preuvesDisponibles: [],
    qualitePreuves: '',
    
    // √âtape 5
    reclamationsEcrites: '',
    reponseEmployeur: '',
    ruptureContrat: '',
    procedurePrudhomale: '',
  });

  // ============================================================================
  // FONCTIONS UTILITAIRES
  // ============================================================================

  const handleInputChange = (field: keyof FormData, value: any) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleCheckboxChange = (field: keyof FormData, value: string) => {
    const currentValues = formData[field] as string[];
    const newValues = currentValues.includes(value)
      ? currentValues.filter(v => v !== value)
      : [...currentValues, value];
    setFormData(prev => ({ ...prev, [field]: newValues }));
  };

  const nextStep = () => {
    if (currentStep < 5) {
      setCurrentStep(currentStep + 1);
      window.scrollTo({ top: 0, behavior: 'smooth' });
    } else {
      setShowResults(true);
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }
  };

  const prevStep = () => {
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }
  };

  // ============================================================================
  // CALCUL DU SCORE
  // ============================================================================

  const calculateScore = () => {
    let score = 0;

    // 1. PREUVES DOCUMENTAIRES (35 points)
    const preuvesPoints: { [key: string]: number } = {
      'Contrat de travail sign√©': 8,
      'Bulletins de salaire des mois impay√©s': 10,
      'Courriers recommand√©s ou emails': 6,
      'Relev√©s bancaires': 5,
      'Mise en demeure envoy√©e': 4,
      'T√©moignages de coll√®gues': 2,
    };
    
    formData.preuvesDisponibles.forEach(preuve => {
      score += preuvesPoints[preuve] || 0;
    });

    // Qualit√© des preuves
    const qualiteBonus = {
      'Excellente - Documents originaux complets': 5,
      'Bonne - La plupart des documents': 3,
      'Moyenne - Quelques documents': 1,
      'Faible - Peu de documents': 0,
    };
    score += qualiteBonus[formData.qualitePreuves as keyof typeof qualiteBonus] || 0;

    // 2. MONTANT ET ANCIENNET√â (25 points)
    const montant = parseFloat(formData.montantTotalDu) || 0;
    if (montant >= 10000) score += 15;
    else if (montant >= 5000) score += 12;
    else if (montant >= 3000) score += 9;
    else if (montant >= 1500) score += 6;
    else score += 3;

    const anciennitePoints = {
      'Plus de 5 ans': 10,
      'Entre 2 et 5 ans': 7,
      'Entre 1 et 2 ans': 5,
      'Entre 6 mois et 1 an': 3,
      'Moins de 6 mois': 1,
    };
    score += anciennitePoints[formData.anciennete as keyof typeof anciennitePoints] || 0;

    // 3. GRAVIT√â DU MANQUEMENT (25 points)
    const nombreMois = parseInt(formData.nombreMoisImpayes) || 0;
    if (nombreMois >= 4) score += 15;
    else if (nombreMois >= 3) score += 12;
    else if (nombreMois >= 2) score += 9;
    else score += 6;

    const elementsImpayes = formData.elementsImpayes.length;
    score += Math.min(elementsImpayes * 2, 10);

    // 4. CONTEXTE FAVORABLE (15 points)
    const demarchesPoints = {
      'R√©clamation orale': 2,
      'Email ou courrier simple': 3,
      'Mise en demeure recommand√©e': 5,
      'Saisine de l\'inspection du travail': 3,
      'Prise de contact avec un avocat': 2,
    };
    
    formData.demarchesEffectuees.forEach(demarche => {
      score += demarchesPoints[demarche as keyof typeof demarchesPoints] || 0;
    });

    return Math.min(Math.round(score), 100);
  };

  // ============================================================================
  // CALCULS FINANCIERS
  // ============================================================================

  const calculateFinancialImpact = () => {
    const montantDu = parseFloat(formData.montantTotalDu) || 0;
    const nombreMois = parseInt(formData.nombreMoisImpayes) || 1;
    
    // Calcul des int√©r√™ts l√©gaux (environ 4.3% annuel)
    const tauxInteret = 0.043;
    const dureeEnMois = nombreMois;
    const interetsLegaux = montantDu * (tauxInteret / 12) * dureeEnMois;
    
    // Dommages et int√©r√™ts selon la gravit√©
    let dommagesInterets = 0;
    if (nombreMois >= 4) {
      dommagesInterets = montantDu * 0.20; // 20% pour manquement grave
    } else if (nombreMois >= 3) {
      dommagesInterets = montantDu * 0.15; // 15%
    } else if (nombreMois >= 2) {
      dommagesInterets = montantDu * 0.10; // 10%
    } else {
      dommagesInterets = montantDu * 0.05; // 5%
    }
    
    const totalRecuperable = montantDu + interetsLegaux + dommagesInterets;
    
    return {
      montantDu,
      interetsLegaux,
      dommagesInterets,
      totalRecuperable,
    };
  };

  // ============================================================================
  // RECOMMANDATIONS PERSONNALIS√âES
  // ============================================================================

  const getRecommendations = () => {
    const score = calculateScore();
    const nombreMois = parseInt(formData.nombreMoisImpayes) || 1;
    const hasStrongProof = formData.preuvesDisponibles.includes('Contrat de travail sign√©') &&
                           formData.preuvesDisponibles.includes('Bulletins de salaire des mois impay√©s');
    
    const recommendations = [];

    if (score >= 75) {
      recommendations.push({
        icon: '‚öñÔ∏è',
        title: 'Dossier solide - Action imm√©diate recommand√©e',
        description: 'Votre situation pr√©sente tous les √©l√©ments pour une action en justice r√©ussie.',
        priority: 'high',
      });
    }

    if (!formData.demarchesEffectuees.includes('Mise en demeure recommand√©e')) {
      recommendations.push({
        icon: 'üìÆ',
        title: 'Envoyez une mise en demeure',
        description: '√âl√©ment indispensable avant toute action en justice. Mod√®le disponible dans votre dossier.',
        priority: 'high',
      });
    }

    if (nombreMois >= 2) {
      recommendations.push({
        icon: '‚ö†Ô∏è',
        title: 'Urgence - D√©lais de prescription',
        description: 'Le d√©lai de prescription est de 3 ans. Agissez rapidement pour pr√©server vos droits.',
        priority: 'high',
      });
    }

    if (!hasStrongProof) {
      recommendations.push({
        icon: 'üìë',
        title: 'Renforcez vos preuves',
        description: 'Rassemblez tous documents possibles : contrat, bulletins, emails, SMS.',
        priority: 'medium',
      });
    }

    if (formData.situationEntreprise === 'Difficult√©s financi√®res graves') {
      recommendations.push({
        icon: 'üè¶',
        title: 'V√©rifiez la proc√©dure collective',
        description: 'Si l\'entreprise est en liquidation, d√©clarez rapidement votre cr√©ance.',
        priority: 'high',
      });
    }

    recommendations.push({
      icon: 'üë®‚Äç‚öñÔ∏è',
      title: 'Conseil d\'un avocat sp√©cialis√©',
      description: 'Un avocat en droit du travail maximisera vos chances de succ√®s.',
      priority: 'medium',
    });

    return recommendations;
  };

  // ============================================================================
  // RENDU CONDITIONNEL - PAGE DE R√âSULTATS
  // ============================================================================

  if (showResults) {
    const score = calculateScore();
    const financial = calculateFinancialImpact();
    const recommendations = getRecommendations();

    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50">
        {/* Header */}
        <div className="bg-white border-b border-gray-200 shadow-sm">
          <div className="max-w-6xl mx-auto px-6 py-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">
                  üí∞ Diagnostic Salaire Impay√©
                </h1>
                <p className="text-gray-600 mt-2">Analyse compl√®te de votre situation</p>
              </div>
              <Link 
                href="/diagnostic"
                className="px-6 py-3 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-xl font-semibold transition-all"
              >
                ‚Üê Retour
              </Link>
            </div>
          </div>
        </div>

        {/* Contenu des r√©sultats */}
        <div className="max-w-6xl mx-auto px-6 py-12">
          {/* Score principal */}
          <div className="bg-white rounded-2xl shadow-xl p-8 mb-8">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-gray-800 mb-4">
                Votre Score de Solidit√© Juridique
              </h2>
              <p className="text-gray-600">
                Bas√© sur {formData.preuvesDisponibles.length + formData.demarchesEffectuees.length} crit√®res analys√©s
              </p>
            </div>

            <div className="flex justify-center items-center mb-8">
              {/* Cercle de score - CORRIG√â POUR CENTRAGE */}
              <div className="relative w-64 h-64">
                <svg className="w-full h-full transform -rotate-90">
                  <circle
                    cx="128"
                    cy="128"
                    r="120"
                    stroke="#e5e7eb"
                    strokeWidth="16"
                    fill="none"
                  />
                  <circle
                    cx="128"
                    cy="128"
                    r="120"
                    stroke={score >= 75 ? '#10b981' : score >= 50 ? '#f59e0b' : '#ef4444'}
                    strokeWidth="16"
                    fill="none"
                    strokeDasharray={`${(score / 100) * 753.6} 753.6`}
                    strokeLinecap="round"
                    className="transition-all duration-1000 ease-out"
                  />
                </svg>
                {/* CORRECTION : Ajout de inset-0 flex flex-col items-center justify-center */}
                <div className="absolute inset-0 flex flex-col items-center justify-center">
                  <div className="text-6xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">
                    {score}
                  </div>
                  <div className="text-2xl text-gray-600 font-semibold">/100</div>
                  <div className="text-sm text-gray-500 mt-2 font-medium">
                    {score >= 75 ? 'Excellent' : score >= 50 ? 'Correct' : '√Ä renforcer'}
                  </div>
                </div>
              </div>
            </div>

            {/* Interpr√©tation du score */}
            <div className={`p-6 rounded-xl ${
              score >= 75 ? 'bg-green-50 border-2 border-green-200' :
              score >= 50 ? 'bg-amber-50 border-2 border-amber-200' :
              'bg-red-50 border-2 border-red-200'
            }`}>
              <h3 className="text-xl font-bold mb-3 flex items-center gap-3">
                {score >= 75 ? '‚úÖ' : score >= 50 ? '‚ö†Ô∏è' : '‚ùå'}
                {score >= 75 ? 'Dossier tr√®s solide' :
                 score >= 50 ? 'Dossier √† renforcer' :
                 'Dossier n√©cessitant am√©lioration'}
              </h3>
              <p className="text-gray-700 leading-relaxed">
                {score >= 75 ? 
                  'Votre dossier pr√©sente de solides arguments juridiques et des preuves convaincantes. Vous avez d\'excellentes chances d\'obtenir gain de cause aux prud\'hommes.' :
                 score >= 50 ?
                  'Votre dossier contient des √©l√©ments favorables mais pourrait √™tre renforc√©. Suivez nos recommandations pour maximiser vos chances de succ√®s.' :
                  'Votre dossier n√©cessite d\'√™tre renforc√© avant d\'engager une proc√©dure. Concentrez-vous sur la collecte de preuves et les d√©marches pr√©alables.'}
              </p>
            </div>
          </div>

          {/* Calculs financiers */}
          <div className="bg-white rounded-2xl shadow-xl p-8 mb-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-3">
              üí∞ Montants r√©cup√©rables estim√©s
            </h2>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="p-6 bg-blue-50 rounded-xl border-2 border-blue-200">
                <div className="text-sm text-blue-600 font-semibold mb-2">Salaire impay√©</div>
                <div className="text-3xl font-bold text-blue-900">
                  {financial.montantDu.toLocaleString('fr-FR', {
                    style: 'currency',
                    currency: 'EUR',
                  })}
                </div>
              </div>

              <div className="p-6 bg-purple-50 rounded-xl border-2 border-purple-200">
                <div className="text-sm text-purple-600 font-semibold mb-2">Int√©r√™ts l√©gaux</div>
                <div className="text-3xl font-bold text-purple-900">
                  {financial.interetsLegaux.toLocaleString('fr-FR', {
                    style: 'currency',
                    currency: 'EUR',
                  })}
                </div>
                <div className="text-xs text-purple-600 mt-1">Taux l√©gal ~4.3%</div>
              </div>

              <div className="p-6 bg-amber-50 rounded-xl border-2 border-amber-200">
                <div className="text-sm text-amber-600 font-semibold mb-2">Dommages et int√©r√™ts</div>
                <div className="text-3xl font-bold text-amber-900">
                  {financial.dommagesInterets.toLocaleString('fr-FR', {
                    style: 'currency',
                    currency: 'EUR',
                  })}
                </div>
                <div className="text-xs text-amber-600 mt-1">Selon gravit√©</div>
              </div>

              <div className="p-6 bg-gradient-to-br from-green-100 to-emerald-100 rounded-xl border-2 border-green-300">
                <div className="text-sm text-green-700 font-semibold mb-2">TOTAL ESTIM√â</div>
                <div className="text-4xl font-bold text-green-900">
                  {financial.totalRecuperable.toLocaleString('fr-FR', {
                    style: 'currency',
                    currency: 'EUR',
                  })}
                </div>
              </div>
            </div>

            <div className="mt-6 p-4 bg-gray-50 rounded-lg border border-gray-200">
              <p className="text-sm text-gray-600">
                <strong>üí° Note :</strong> Ces montants sont des estimations bas√©es sur les informations fournies. 
                Les montants r√©els d√©pendront de la d√©cision du conseil de prud'hommes et de votre situation sp√©cifique.
              </p>
            </div>
          </div>

          {/* Recommandations personnalis√©es */}
          <div className="bg-white rounded-2xl shadow-xl p-8 mb-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-3">
              üéØ Vos recommandations personnalis√©es
            </h2>

            <div className="space-y-4">
              {recommendations.map((rec, index) => (
                <div
                  key={index}
                  className={`p-6 rounded-xl border-2 ${
                    rec.priority === 'high'
                      ? 'bg-red-50 border-red-200'
                      : 'bg-blue-50 border-blue-200'
                  }`}
                >
                  <div className="flex items-start gap-4">
                    <div className="text-4xl">{rec.icon}</div>
                    <div className="flex-1">
                      <h3 className="text-lg font-bold text-gray-800 mb-2 flex items-center gap-2">
                        {rec.title}
                        {rec.priority === 'high' && (
                          <span className="px-3 py-1 bg-red-500 text-white text-xs font-bold rounded-full">
                            URGENT
                          </span>
                        )}
                      </h3>
                      <p className="text-gray-700">{rec.description}</p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* CTA Premium - BOUTON ROUGE ULTRA-VISIBLE */}
          <div className="bg-gradient-to-br from-indigo-900 to-blue-900 rounded-2xl shadow-2xl p-8 text-white">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold mb-4">
                üìÑ Obtenez votre dossier juridique complet
              </h2>
              <p className="text-blue-100 text-lg">
                Un dossier de 30 pages pour maximiser vos chances de succ√®s
              </p>
            </div>

            <div className="grid md:grid-cols-3 gap-6 mb-8">
              <div className="bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20">
                <div className="text-3xl mb-3">‚öñÔ∏è</div>
                <h3 className="font-bold text-lg mb-2">Arguments juridiques</h3>
                <p className="text-blue-100 text-sm">
                  Articles de loi et jurisprudence pertinents
                </p>
              </div>

              <div className="bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20">
                <div className="text-3xl mb-3">üìù</div>
                <h3 className="font-bold text-lg mb-2">Mod√®les de courriers</h3>
                <p className="text-blue-100 text-sm">
                  Mise en demeure, requ√™te prud'homale
                </p>
              </div>

              <div className="bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20">
                <div className="text-3xl mb-3">üéØ</div>
                <h3 className="font-bold text-lg mb-2">Strat√©gie personnalis√©e</h3>
                <p className="text-blue-100 text-sm">
                  Plan d'action adapt√© √† votre cas
                </p>
              </div>
            </div>

            {/* BOUTON ROUGE ULTRA-VISIBLE - CORRIG√â D√àS LE D√âPART */}
            <Link
              href="/paiement"
              className="block w-full px-8 py-5 bg-red-600 hover:bg-red-700 text-white text-center rounded-xl font-bold border-4 border-red-800 shadow-2xl hover:shadow-red-500/50 transition-all duration-300 hover:scale-105"
              style={{ fontSize: '20px' }}
            >
              ‚úì VOIR MES R√âSULTATS
            </Link>

            <p className="text-center text-blue-100 mt-6 text-sm">
              üí≥ <strong>120‚Ç¨</strong> tarif standard ‚Ä¢ <strong>60‚Ç¨</strong> pour les membres d'organisations syndicales
            </p>
          </div>
        </div>
      </div>
    );
  }

  // ============================================================================
  // RENDU PRINCIPAL - FORMULAIRE PAR √âTAPES
  // ============================================================================

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50">
      {/* Header */}
      <div className="bg-white border-b border-gray-200 shadow-sm">
        <div className="max-w-4xl mx-auto px-6 py-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">
                üí∞ Diagnostic Salaire Impay√©
              </h1>
              <p className="text-gray-600 mt-2">√âvaluez vos chances de r√©cup√©ration</p>
            </div>
            <Link 
              href="/diagnostic"
              className="px-6 py-3 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-xl font-semibold transition-all"
            >
              ‚Üê Retour
            </Link>
          </div>
        </div>
      </div>

      {/* Barre de progression */}
      <div className="bg-white border-b border-gray-200">
        <div className="max-w-4xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-sm font-semibold text-gray-600">
              √âtape {currentStep} sur 5
            </span>
            <span className="text-sm text-gray-500">
              {Math.round((currentStep / 5) * 100)}% compl√©t√©
            </span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-3 overflow-hidden">
            <div
              className="bg-gradient-to-r from-blue-500 to-indigo-600 h-full rounded-full transition-all duration-500 ease-out"
              style={{ width: `${(currentStep / 5) * 100}%` }}
            />
          </div>
          <div className="flex justify-between mt-3 text-xs text-gray-500">
            <span className={currentStep >= 1 ? 'text-blue-600 font-semibold' : ''}>Infos</span>
            <span className={currentStep >= 2 ? 'text-blue-600 font-semibold' : ''}>D√©tails</span>
            <span className={currentStep >= 3 ? 'text-blue-600 font-semibold' : ''}>Contexte</span>
            <span className={currentStep >= 4 ? 'text-blue-600 font-semibold' : ''}>Preuves</span>
            <span className={currentStep >= 5 ? 'text-blue-600 font-semibold' : ''}>Suite</span>
          </div>
        </div>
      </div>

      {/* Formulaire */}
      <div className="max-w-4xl mx-auto px-6 py-12">
        <div className="bg-white rounded-2xl shadow-xl p-8">
          {/* √âTAPE 1 : Informations g√©n√©rales */}
          {currentStep === 1 && (
            <div className="space-y-6">
              <div>
                <h2 className="text-2xl font-bold text-gray-800 mb-2">
                  üìã Informations g√©n√©rales
                </h2>
                <p className="text-gray-600">
                  Commen√ßons par les informations de base sur votre situation
                </p>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quel est votre type de contrat ?
                </label>
                <div className="space-y-2">
                  {[
                    'CDI (Contrat √† Dur√©e Ind√©termin√©e)',
                    'CDD (Contrat √† Dur√©e D√©termin√©e)',
                    'Contrat d\'int√©rim',
                    'Contrat d\'apprentissage ou professionnalisation',
                    'Autre',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="typeContrat"
                        value={option}
                        checked={formData.typeContrat === option}
                        onChange={(e) => handleInputChange('typeContrat', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quelle est votre anciennet√© dans l'entreprise ?
                </label>
                <div className="space-y-2">
                  {[
                    'Moins de 6 mois',
                    'Entre 6 mois et 1 an',
                    'Entre 1 et 2 ans',
                    'Entre 2 et 5 ans',
                    'Plus de 5 ans',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="anciennete"
                        value={option}
                        checked={formData.anciennete === option}
                        onChange={(e) => handleInputChange('anciennete', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quel est votre salaire mensuel brut habituel ?
                </label>
                <input
                  type="number"
                  value={formData.salaireBrutMensuel}
                  onChange={(e) => handleInputChange('salaireBrutMensuel', e.target.value)}
                  placeholder="Ex: 2500"
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition-all"
                />
                <p className="mt-2 text-sm text-gray-500">
                  üí° Indiquez le montant en euros, avant pr√©l√®vements
                </p>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quel a √©t√© votre dernier jour de travail effectif ?
                </label>
                <input
                  type="date"
                  value={formData.dernierJourTravaille}
                  onChange={(e) => handleInputChange('dernierJourTravaille', e.target.value)}
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition-all"
                />
              </div>
            </div>
          )}

          {/* √âTAPE 2 : D√©tails du non-paiement */}
          {currentStep === 2 && (
            <div className="space-y-6">
              <div>
                <h2 className="text-2xl font-bold text-gray-800 mb-2">
                  üí∏ D√©tails du non-paiement
                </h2>
                <p className="text-gray-600">
                  Pr√©cisez les √©l√©ments de r√©mun√©ration qui ne vous ont pas √©t√© vers√©s
                </p>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Sur quelle p√©riode vos salaires sont-ils impay√©s ?
                </label>
                <input
                  type="text"
                  value={formData.periodeImpayee}
                  onChange={(e) => handleInputChange('periodeImpayee', e.target.value)}
                  placeholder="Ex: Janvier √† Mars 2024"
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition-all"
                />
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Combien de mois de salaire sont impay√©s ?
                </label>
                <input
                  type="number"
                  value={formData.nombreMoisImpayes}
                  onChange={(e) => handleInputChange('nombreMoisImpayes', e.target.value)}
                  placeholder="Ex: 2"
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition-all"
                />
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quels √©l√©ments de r√©mun√©ration sont impay√©s ? (plusieurs choix possibles)
                </label>
                <div className="space-y-2">
                  {[
                    'Salaire de base',
                    'Heures suppl√©mentaires',
                    'Primes (13√®me mois, objectifs, etc.)',
                    'Commissions',
                    'Indemnit√©s de cong√©s pay√©s',
                    'Remboursement de frais professionnels',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="checkbox"
                        checked={formData.elementsImpayes.includes(option)}
                        onChange={() => handleCheckboxChange('elementsImpayes', option)}
                        className="w-5 h-5 text-blue-600 rounded"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quel est le montant total qui vous est d√ª ?
                </label>
                <input
                  type="number"
                  value={formData.montantTotalDu}
                  onChange={(e) => handleInputChange('montantTotalDu', e.target.value)}
                  placeholder="Ex: 5000"
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition-all"
                />
                <p className="mt-2 text-sm text-gray-500">
                  üí° Montant brut total de tous les √©l√©ments impay√©s
                </p>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  √Ä quelle date le premier salaire aurait-il d√ª √™tre pay√© ?
                </label>
                <input
                  type="date"
                  value={formData.datePaiementPrevu}
                  onChange={(e) => handleInputChange('datePaiementPrevu', e.target.value)}
                  className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition-all"
                />
              </div>
            </div>
          )}

          {/* √âTAPE 3 : Contexte et circonstances */}
          {currentStep === 3 && (
            <div className="space-y-6">
              <div>
                <h2 className="text-2xl font-bold text-gray-800 mb-2">
                  üìù Contexte et circonstances
                </h2>
                <p className="text-gray-600">
                  Ces informations nous aideront √† √©valuer la solidit√© de votre dossier
                </p>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quelle raison l'employeur a-t-il invoqu√©e pour le non-paiement ?
                </label>
                <div className="space-y-2">
                  {[
                    'Aucune explication fournie',
                    'Difficult√©s financi√®res temporaires',
                    'Contestation sur le montant',
                    'Probl√®me administratif ou technique',
                    'Litige sur les heures travaill√©es',
                    'Autre raison',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="raisonInvoquee"
                        value={option}
                        checked={formData.raisonInvoquee === option}
                        onChange={(e) => handleInputChange('raisonInvoquee', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quelle est la situation actuelle de l'entreprise ?
                </label>
                <div className="space-y-2">
                  {[
                    'Activit√© normale apparente',
                    'Difficult√©s financi√®res connues',
                    'Difficult√©s financi√®res graves',
                    'Proc√©dure collective en cours (sauvegarde, redressement)',
                    'Liquidation judiciaire',
                    'Entreprise ferm√©e/disparue',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="situationEntreprise"
                        value={option}
                        checked={formData.situationEntreprise === option}
                        onChange={(e) => handleInputChange('situationEntreprise', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  D'autres salari√©s sont-ils √©galement concern√©s par des impay√©s ?
                </label>
                <div className="space-y-2">
                  {[
                    'Oui, plusieurs autres salari√©s',
                    'Oui, quelques autres salari√©s',
                    'Non, je suis le seul concern√©',
                    'Je ne sais pas',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="autresSalariesConcernes"
                        value={option}
                        checked={formData.autresSalariesConcernes === option}
                        onChange={(e) => handleInputChange('autresSalariesConcernes', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quelles d√©marches avez-vous d√©j√† effectu√©es ? (plusieurs choix possibles)
                </label>
                <div className="space-y-2">
                  {[
                    'R√©clamation orale',
                    'Email ou courrier simple',
                    'Mise en demeure recommand√©e',
                    'Saisine de l\'inspection du travail',
                    'Prise de contact avec un avocat',
                    'Aucune d√©marche pour l\'instant',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="checkbox"
                        checked={formData.demarchesEffectuees.includes(option)}
                        onChange={() => handleCheckboxChange('demarchesEffectuees', option)}
                        className="w-5 h-5 text-blue-600 rounded"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>
            </div>
          )}

          {/* √âTAPE 4 : Preuves disponibles */}
          {currentStep === 4 && (
            <div className="space-y-6">
              <div>
                <h2 className="text-2xl font-bold text-gray-800 mb-2">
                  üìë Preuves disponibles
                </h2>
                <p className="text-gray-600">
                  Les preuves sont essentielles pour √©tablir vos droits et obtenir gain de cause
                </p>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quels documents pouvez-vous fournir ? (plusieurs choix possibles)
                </label>
                <div className="space-y-2">
                  {[
                    'Contrat de travail sign√©',
                    'Bulletins de salaire des mois impay√©s',
                    'Courriers recommand√©s ou emails',
                    'Relev√©s bancaires',
                    'Mise en demeure envoy√©e',
                    'T√©moignages de coll√®gues',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="checkbox"
                        checked={formData.preuvesDisponibles.includes(option)}
                        onChange={() => handleCheckboxChange('preuvesDisponibles', option)}
                        className="w-5 h-5 text-blue-600 rounded"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Comment √©valueriez-vous la qualit√© de vos preuves ?
                </label>
                <div className="space-y-2">
                  {[
                    'Excellente - Documents originaux complets',
                    'Bonne - La plupart des documents',
                    'Moyenne - Quelques documents',
                    'Faible - Peu de documents',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="qualitePreuves"
                        value={option}
                        checked={formData.qualitePreuves === option}
                        onChange={(e) => handleInputChange('qualitePreuves', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div className="bg-amber-50 border-2 border-amber-200 rounded-xl p-6">
                <h3 className="font-bold text-amber-900 mb-2 flex items-center gap-2">
                  üí° Conseil important
                </h3>
                <p className="text-amber-800 text-sm leading-relaxed">
                  Les bulletins de salaire et le contrat de travail sont les preuves les plus importantes. 
                  Si vous ne les avez pas, demandez-les par courrier recommand√© avec accus√© de r√©ception. 
                  L'employeur a l'obligation de vous les fournir.
                </p>
              </div>
            </div>
          )}

          {/* √âTAPE 5 : R√©clamations et suite */}
          {currentStep === 5 && (
            <div className="space-y-6">
              <div>
                <h2 className="text-2xl font-bold text-gray-800 mb-2">
                  üéØ R√©clamations et suite envisag√©e
                </h2>
                <p className="text-gray-600">
                  Derni√®res informations pour compl√©ter votre diagnostic
                </p>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Avez-vous effectu√© des r√©clamations √©crites √† votre employeur ?
                </label>
                <div className="space-y-2">
                  {[
                    'Oui, plusieurs fois par courrier recommand√©',
                    'Oui, par email ou courrier simple',
                    'Non, seulement des r√©clamations orales',
                    'Non, aucune r√©clamation formelle',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="reclamationsEcrites"
                        value={option}
                        checked={formData.reclamationsEcrites === option}
                        onChange={(e) => handleInputChange('reclamationsEcrites', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Quelle a √©t√© la r√©ponse de l'employeur √† vos r√©clamations ?
                </label>
                <div className="space-y-2">
                  {[
                    'Promesse de r√©gularisation jamais tenue',
                    'Contestation du montant d√ª',
                    'Absence totale de r√©ponse',
                    'Reconnaissance du d√ª mais incapacit√© de payer',
                    'Autre',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="reponseEmployeur"
                        value={option}
                        checked={formData.reponseEmployeur === option}
                        onChange={(e) => handleInputChange('reponseEmployeur', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Votre contrat de travail est-il toujours en cours ?
                </label>
                <div className="space-y-2">
                  {[
                    'Oui, je suis toujours en poste',
                    'Non, j\'ai d√©missionn√©',
                    'Non, j\'ai √©t√© licenci√©',
                    'Non, le contrat est arriv√© √† terme (CDD)',
                    'Autre situation',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="ruptureContrat"
                        value={option}
                        checked={formData.ruptureContrat === option}
                        onChange={(e) => handleInputChange('ruptureContrat', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-gray-700 mb-3">
                  Envisagez-vous de saisir le conseil de prud'hommes ?
                </label>
                <div className="space-y-2">
                  {[
                    'Oui, c\'est ma priorit√©',
                    'Oui, si n√©cessaire',
                    'J\'h√©site encore',
                    'Non, je pr√©f√®re n√©gocier',
                    'Je ne sais pas',
                  ].map((option) => (
                    <label
                      key={option}
                      className="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-all"
                    >
                      <input
                        type="radio"
                        name="procedurePrudhomale"
                        value={option}
                        checked={formData.procedurePrudhomale === option}
                        onChange={(e) => handleInputChange('procedurePrudhomale', e.target.value)}
                        className="w-5 h-5 text-blue-600"
                      />
                      <span className="ml-3 text-gray-700">{option}</span>
                    </label>
                  ))}
                </div>
              </div>

              <div className="bg-blue-50 border-2 border-blue-200 rounded-xl p-6">
                <h3 className="font-bold text-blue-900 mb-2 flex items-center gap-2">
                  ‚öñÔ∏è Bon √† savoir
                </h3>
                <p className="text-blue-800 text-sm leading-relaxed mb-2">
                  Le d√©lai de prescription pour r√©clamer des salaires impay√©s est de 3 ans √† compter 
                  du jour o√π le salaire aurait d√ª √™tre vers√©. Il est important d'agir rapidement.
                </p>
                <p className="text-blue-800 text-sm leading-relaxed">
                  La saisine du conseil de prud'hommes est gratuite et peut se faire sans avocat, 
                  bien qu'un avocat augmente significativement vos chances de succ√®s.
                </p>
              </div>
            </div>
          )}

          {/* Boutons de navigation */}
          <div className="flex justify-between items-center mt-8 pt-6 border-t border-gray-200">
            {currentStep > 1 && (
              <button
                onClick={prevStep}
                className="px-6 py-3 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-xl font-semibold transition-all"
              >
                ‚Üê √âtape pr√©c√©dente
              </button>
            )}
            {currentStep === 1 && <div />}
            
            <button
              onClick={nextStep}
              className="ml-auto px-8 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all"
            >
              {currentStep === 5 ? 'Voir mon diagnostic ‚Üí' : '√âtape suivante ‚Üí'}
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}
